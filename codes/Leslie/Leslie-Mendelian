# Final stable population model
# for obesity forecasting - Mendelian rules

rm(list = ls())
gc()
memory.limit(size=10^10)

require(haven)
require(ggplot2)

setwd("~/ECHO/obesity")

#########
# Stable-population model
# for the forecasting of obesity prevalence
# across generations (Aldea, Garcia-Aguirre, Palloni)
# WITH 4 BMI CLASSES (< 18.5, [18.5-25), [25-30), >= 30)
####################

#1. The initial distribution is
# derived from the HRS couples
#----------

#stock BMI classes
dis <- array(0:0, c(50, 4))


#set parameters of heritability
alpha0 = 27.528
beta0 = 1.081
gamma = 2.1
sigma = 4.2

###########
# 1st generation
# from couples in the HRS

ff <- read_dta("~/ECHO/obesity/Sim_Alberto_final/leslieABBREV.dta")
ff <- subset(ff, ID == 1)
ff <- ff[,c(1:9, 28)]

#computed pgs-driven bmi for spouses
ff$gen_bmi <- alpha0 + beta0 * ff$PGS_BMI
ff$sp_gen_bmi <- alpha0 + beta0 * ff$sp_PGS_BMI

#differential btw real couple bmi & 
#genetic-driven bmi
ff$delta <- 0.5 * (2 * ff$meanparBMI - ff$gen_bmi - ff$sp_gen_bmi)

#normalize delta to obtain couple CRS
ff$crs_par <- ff$delta / sqrt (2 * var(ff$delta))

#Mating ("end" for endogamous, "ran" for random)
mating <- "end"

#Fertility ("dif" for differential, "hom" for homogeneous)
fertility <- "hom"


ind <- as.data.frame(t(c(0,0,0,0)))

for (i in 1:nrow(ff)){
  
  q <- floor(runif(1,1,4))
  
  for (j in 1:q){
    
    pgs <- ff$par_PGS_BMI [i] + rnorm (1, mean = 0, sd = sqrt(0.5))
    
    crs <- ff$crs_par [i] + rnorm (1, mean = 0, sd = sqrt(0.5))
    
    bmi <- alpha0 + beta0 * pgs + gamma * crs + rnorm (1, mean = 0, sd = sigma)
    
    class <- ifelse (bmi < 18.5, 1,
                     ifelse(bmi < 25, 2,
                            ifelse(bmi < 30, 3, 4)))
    
    ind <- rbind (ind, c(pgs, crs, bmi, class))
    
  }
  
}

ind <- ind [-c(1),]

# saveRDS(ind, file = "~/ECHO/obesity/generation1.rds")
# ind <- readRDS(file = "~/ECHO/obesity/generation1.rds")

#attribute values to 1st gen
dis [1, 1] <- length(which(ind$V4 == 1)) / nrow(ind)
dis [1, 2] <- length(which(ind$V4 == 2)) / nrow(ind)
dis [1, 3] <- length(which(ind$V4 == 3)) / nrow(ind)
dis [1, 4] <- length(which(ind$V4 == 4)) / nrow(ind)

#######loooooooop

for (t in 2:50){
  
  #1. Mating
  #-----------
  
  if (mating=="end"){
    #1a. Completely endogamous
    m <- c(dis[t-1, 1], 0, 0, 0, 0, dis[t-1, 2], 0, 0, 0, 0, dis[t-1, 3], 0, 0, 0, 0, dis[t-1, 4])
    
  }else if (mating=="ran"){
    #1b. Completely random mating
    m <- c(dis[t-1, 1]^2, dis[t-1, 1]*dis[t-1, 2], dis[t-1, 1]*dis[t-1, 3], dis[t-1, 1]*dis[t-1, 4],
           dis[t-1, 1]*dis[t-1, 2], dis[t-1, 2]^2, dis[t-1, 2]*dis[t-1, 3], dis[t-1, 2]*dis[t-1, 4],
           dis[t-1, 1]*dis[t-1, 3], dis[t-1, 2]*dis[t-1, 3], dis[t-1, 3]^2, dis[t-1, 3]*dis[t-1, 4],
           dis[t-1, 1]*dis[t-1, 4], dis[t-1, 2]*dis[t-1, 4], dis[t-1, 3]*dis[t-1, 4], dis[t-1, 4]^2)
    
  }else{print ("you've got to enter a correct mating pattern!!")}
  
  
  #2. Fertility
  #----------------
  
  if (fertility=="dif"){
    #2a. Differential fertility (between 1.4 - 2.3, most for 2 obese)
    f <- array(0:0, c(16))
    for (i in 1:4){
      for (j in 1:4){
        #f[(i-1)*4+j] <- 1.1 + (i+j)*3/20
        f[(i-1)*4+j] <- (i+j-2)*0.5   #1.1 + (i+j)*3/20
      }
    }
    
  }else if (fertility=="hom"){
    #2b. Homogeneous fertility
    f <- 2*(array(0:0, c(16)) + 1)
    
  }else{print ("you've got to enter a correct fertility pattern!!")}
  
  
  #3. Children
  #--------------
  c <- m*f
  
  
  #4. Heritability matrix
  #---------------
  #genetic her
  
  hg <- array(0:0, c(2,16))
  hg[,1]<-c(1,0)
  hg[,2]<-c(1,0)
  hg[,3]<-hg[,2]
  hg[,5]<-hg[,2]
  hg[,6]<-c(1,0)
  hg[,7]<-hg[,6] ; hg[,9]<-hg[,6] ;  hg[,10]<-hg[,6] ; hg[,11]<-hg[,6] 
  hg[,16]<-c(1/9,8/9)
  hg[,4]<-c(1/3,2/3)
  hg[,13]<-hg[,4]
  hg[,14]<-hg[,4];hg[,15]<-hg[,4]
  hg[,8]<-hg[,4] ; hg[,12]<-hg[,4] 
  
  o <- array(0:0, c(16))
  p <- array(0:0, c(16))
  for (i in 1:4){
    for (j in 1:4){
      o[(i-1)*4+j]<-0.125+(i-1)*0.125+(j-1)*0.125
      p[(i-1)*4+j]<-0.1-(i-1)*0.015-(j-1)*0.015
      #print ((i-1)*4+j)
    }
  }
  
  hg1 <- hg[1,]*p
  hg2 <- hg[1,]*(1-p)*(1-o)
  hg3 <- hg[1,]*(1-p)*o
  
  h<-rbind(hg1,hg2,hg3,hg[2,])
  
  new <- array(0:0,c(4))
  for (i in 1:16){
    new <- new + c[i]*h[,i]/sum(c)
  }
  
  dis[t,] <- new / sum(new)
}

saveRDS(dis, "~/ECHO/obesity/Mendelian/end_hom_1.rds")
